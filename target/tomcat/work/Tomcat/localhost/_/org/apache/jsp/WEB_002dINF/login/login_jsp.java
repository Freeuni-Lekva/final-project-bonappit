/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-08-16 13:15:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    form {\r\n");
      out.write("        border: 1ch solid #f1f1f1;\r\n");
      out.write("        width: 50%;\r\n");
      out.write("    }\r\n");
      out.write("    input[type=text], input[type=password] {\r\n");
      out.write("        width: 40%;\r\n");
      out.write("        padding: 12px 22px;\r\n");
      out.write("        margin: 7px 0;\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("    button {\r\n");
      out.write("        background-color: #04AA6D;\r\n");
      out.write("        color: white;\r\n");
      out.write("        padding: 15px 20px;\r\n");
      out.write("        margin: 7px 0;\r\n");
      out.write("        border: none;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        width: 40%;\r\n");
      out.write("    }\r\n");
      out.write("    button:hover {\r\n");
      out.write("        opacity: 0.8;\r\n");
      out.write("    }\r\n");
      out.write("    .container {\r\n");
      out.write("        padding: 15px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #message {\r\n");
      out.write("        display:none;\r\n");
      out.write("        background: #f1f1f1;\r\n");
      out.write("        color: #000;\r\n");
      out.write("        position: relative;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #message p {\r\n");
      out.write("        padding: 10px 35px;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .invalid {\r\n");
      out.write("        color: red;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .invalid:before {\r\n");
      out.write("        position: relative;\r\n");
      out.write("        left: -35px;\r\n");
      out.write("        content: \"&#10006;\";\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    var myInput = document.getElementById(\"password\");\r\n");
      out.write("    var myInput2 = document.getElementById(\"username\");\r\n");
      out.write("    var number = document.getElementById(\"number\");\r\n");
      out.write("    var length = document.getElementById(\"length\");\r\n");
      out.write("\r\n");
      out.write("    myInput.onfocus = function() {\r\n");
      out.write("        document.getElementById(\"message\").style.display = \"block\";\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    myInput.onblur = function() {\r\n");
      out.write("        document.getElementById(\"message\").style.display = \"none\";\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    myInput.onkeyup = function() {\r\n");
      out.write("        var numbers = /[0-9]/g;\r\n");
      out.write("        if(myInput.value.match(numbers)) {\r\n");
      out.write("            number.classList.remove(\"invalid\");\r\n");
      out.write("            number.classList.add(\"valid\");\r\n");
      out.write("        } else {\r\n");
      out.write("            number.classList.remove(\"valid\");\r\n");
      out.write("            number.classList.add(\"invalid\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if(myInput.value.length <= 8 && myInput.value.length > 0) {\r\n");
      out.write("            length.classList.remove(\"invalid\");\r\n");
      out.write("            length.classList.add(\"valid\");\r\n");
      out.write("        } else {\r\n");
      out.write("            length.classList.remove(\"valid\");\r\n");
      out.write("            length.classList.add(\"invalid\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        myInput2.onfocus = function() {\r\n");
      out.write("            document.getElementById(\"message\").style.display = \"block\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        myInput2.onblur = function() {\r\n");
      out.write("            document.getElementById(\"message\").style.display = \"none\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        myInput2.onkeyup = function() {\r\n");
      out.write("            var numbers = /[0-9]/g;\r\n");
      out.write("            if (myInput.value.match(numbers)) {\r\n");
      out.write("                number.classList.remove(\"invalid\");\r\n");
      out.write("                number.classList.add(\"valid\");\r\n");
      out.write("            } else {\r\n");
      out.write("                number.classList.remove(\"valid\");\r\n");
      out.write("                number.classList.add(\"invalid\");\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (myInput.value.length <= 8 && myInput.value.length > 0) {\r\n");
      out.write("                length.classList.remove(\"invalid\");\r\n");
      out.write("                length.classList.add(\"valid\");\r\n");
      out.write("            } else {\r\n");
      out.write("                length.classList.remove(\"valid\");\r\n");
      out.write("                length.classList.add(\"invalid\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>BonAppIt</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("\r\n");
      out.write("    <h1>Welcome to BonAppIt</h1>\r\n");
      out.write("    <p>Please log in</p>\r\n");
      out.write("    <form action=\"loginServlet\" method=\"post\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <label for=\"username\">User Name:</label><br>\r\n");
      out.write("            <input type=\"text\" id=\"username\" name=\"username\" pattern=\"(?=.*\\d).{1,8}\"\r\n");
      out.write("                   title=\"Must contain at least one number and maximum 8 or less characters\" required><br>\r\n");
      out.write("            <label for=\"password\">Password:</label><br>\r\n");
      out.write("            <input id=\"password\" type=\"text\" name=\"password\" pattern=\"(?=.*\\d).{1,8}\"\r\n");
      out.write("                   title=\"Must contain at least one number and maximum 8 or less characters\" required><br>\r\n");
      out.write("            <button type=\"submit\">login</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"message\">\r\n");
      out.write("        <h3>must contain the following:</h3>\r\n");
      out.write("        <p id=\"number\" class=\"invalid\">A <b>number</b></p>\r\n");
      out.write("        <p id=\"length\" class=\"invalid\">Minimum <b>8 characters</b></p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <a href=\"createAccount\">Create New Account </a>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
